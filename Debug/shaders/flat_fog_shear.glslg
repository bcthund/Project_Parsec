#version 330 core
smooth in vec2 vTexCoordIn[];
smooth out vec2 vTexCoord;
smooth in vec4 vEyeSpacePos[]; 
smooth out vec4 vEyeSpacePosOut; 
precision highp float;
layout (triangles) in;
layout (triangle_strip) out;
layout (max_vertices = 3) out;
void main(void) {
 int i;
// for ( i=0; i < gl_in.length(); i++) {
// float fWaveX = sin(fTime*20);
// float fWaveY = sin(fTime*20)/10;

  vTexCoord = vTexCoordIn[0];
  vEyeSpacePosOut = vEyeSpacePos[0];
//  gl_Position = gl_in[0].gl_Position + vec4(fWaveX, 0.0f, 0.0f, 0.0f);
  gl_Position = gl_in[0].gl_Position;
  EmitVertex();

  vTexCoord = vTexCoordIn[1];
  vEyeSpacePosOut = vEyeSpacePos[1];
  gl_Position = gl_in[1].gl_Position;
  EmitVertex();

  vTexCoord = vTexCoordIn[2];
  vEyeSpacePosOut = vEyeSpacePos[2];
  gl_Position = gl_in[2].gl_Position;
  EmitVertex();

//  vTexCoord = vTexCoordIn[3];
//  vEyeSpacePosOut = vEyeSpacePos[3];
//  gl_Position = gl_in[3].gl_Position;
//  EmitVertex();

// for ( i=0; i < 3; i++) {
//  vTexCoord = vTexCoordIn[i];
//  vEyeSpacePosOut = vEyeSpacePos[i];
//  gl_Position = gl_in[i].gl_Position;
//  EmitVertex();
//  float fSize = 2*fFactor[i];
//  gl_Position = gl_in[i].gl_Position + vec4(0.0f, fSize, 0.0f, 0.0f);
//  fAlpha = 0.0f;
//  EmitVertex();
// }
 EndPrimitive();
}
